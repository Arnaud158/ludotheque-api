variables:
  URL_REGISTRE_IMAGE: "registre.priv.iutdelens.ovh"
  URL_DOCKERHUB: "dockerhub.priv.iutdelens.ovh"

image: dockerhub.priv.iutdelens.ovh/php:8.2

# Select what we should cache between builds
cache:
  paths:
    - vendor/

stages:
  - "config"
  - "test"
  - "analyse"
  - "build"

config:
  stage: config
  tags:
    - "sae-s4a01"
  script:
    - apt-get update -yqq
    - apt-get install -yqq git libpq-dev libcurl4-gnutls-dev libicu-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev libonig-dev libzip-dev
    # Install PHP extensions
    - docker-php-ext-install mbstring pdo_pgsql curl intl gd xml zip bz2 opcache
    # Install and run Composer
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install

test:
  stage: test
  tags:
    - "sae-s4a01"
  script:
    - cp .env.example .env
    - php artisan key:generate
    - ./vendor/bin/phpunit

linter:
  stage: analyse
  tags:
    - "sae-s4a01"
  script:
    - ./vendor/bin/duster lint
  allow_failure: true


build-image:
  stage: build
  tags:
    - "sae-s4a01"
  image:
      name: gcr.io/kaniko-project/executor:v1.9.2-debug
      entrypoint: [""]
  script:
        - mkdir -p /kaniko/.docker
        - echo "{\"auths\":{\"${URL_REGISTRE_IMAGE}\":{\"auth\":\"$(printf "%s:%s" "${USER_LOGIN}" "${PASSWORD_IUT}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
        - >-
          /kaniko/executor
          --context "${CI_PROJECT_DIR}"
          --dockerfile "${CI_PROJECT_DIR}/Dockerfile-prod"
          --destination "${URL_REGISTRE_IMAGE}/${USER_LOGIN}/${CI_PROJECT_NAME}:${CI_COMMIT_SHORT_SHA}"
  when: manual

  